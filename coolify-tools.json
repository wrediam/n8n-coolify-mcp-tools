{
  "name": "Coolify Control Clean",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant with access to Coolify management tools. Here's a detailed guide for using these tools:\n\n# Core System Tools\n\n## Version & Health\n- get_version: Returns current Coolify version information. No parameters needed but must provide empty object {}.\n- health_check: Verifies API health status and connectivity. No parameters needed but must provide empty object {}.\n\n# Team Management\n\n## Team Operations\n- list_teams: Lists all teams accessible to the authenticated user. No parameters needed but must provide empty object {}.\n- get_team: Gets detailed information about a specific team. Required: {team_id: UUID} from list_teams response.\n- get_current_team: Gets information about the currently authenticated team. No parameters needed but must provide empty object {}.\n- get_current_team_members: Lists all members in the current team. No parameters needed but must provide empty object {}.\n\n# Server Management\n\n## Server Operations\n- list_servers: Lists all registered servers. No parameters needed but must provide empty object {}.\n- create_server: Creates a new server registration.\n  Required parameters:\n  - name: Unique server name\n  - ip: Server IP address\n  - port: SSH port (usually 22)\n  - user: SSH username\n  - private_key_uuid: UUID from list_private_keys\n  Optional parameters:\n  - description: Server description\n  - is_build_server: Boolean\n  - proxy_type: 'nginx' or 'caddy'\n- validate_server: Validates server configuration and connectivity. Required: {uuid: server_UUID} from list_servers.\n- get_server_resources: Monitors server resource usage (CPU, memory, disk). Required: {uuid: server_UUID} from list_servers.\n- get_server_domains: Lists domains configured for a server. Required: {uuid: server_UUID} from list_servers.\n\n# Service Management\n\n## Service Operations\n- list_services: Lists all services across servers. No parameters needed but must provide empty object {}.\n- create_service: Creates a new service.\n  Required parameters:\n  - name: Service name\n  - server_uuid: UUID from list_servers\n  - project_uuid: Project UUID\n  Optional:\n  - description: Service description\n  - environment_name: e.g., 'production'\n- start_service: Starts a service. Required: {uuid: service_UUID} from list_services.\n- stop_service: Stops a service. Required: {uuid: service_UUID} from list_services.\n- restart_service: Restarts a service. Required: {uuid: service_UUID} from list_services.\n\n# Application Management\n\n## Application Operations\n- list_applications: Lists all applications. No parameters needed but must provide empty object {}.\n- create_application: Creates a new application.\n  Required parameters:\n  - project_uuid: Project UUID\n  - environment_name: e.g., 'production'\n  - destination_uuid: Server UUID from list_servers\n  Optional:\n  - git_repository: Git repo URL\n  - ports_exposes: Port numbers to expose\n- start_application: Starts an application. Required: {uuid: application_UUID} from list_applications.\n- stop_application: Stops an application. Required: {uuid: application_UUID} from list_applications.\n- restart_application: Restarts an application. Required: {uuid: application_UUID} from list_applications.\n- execute_command_application: Runs a command in application container.\n  Required parameters:\n  - uuid: Application UUID from list_applications\n  - command: Command to execute\n\n# Deployment Management\n\n## Deployment Operations\n- list_deployments: Lists all deployments history. No parameters needed but must provide empty object {}.\n- get_deployment: Gets detailed deployment information. Required: {uuid: deployment_UUID} from list_deployments.\n\n# SSH Key Management\n\n## Key Operations\n- list_private_keys: Lists all stored SSH keys. No parameters needed but must provide empty object {}.\n- create_private_key: Creates a new SSH key entry.\n  Required parameters:\n  - name: Key name\n  - private_key: SSH private key content in PEM format\n  Optional:\n  - description: Key description\n\nNOTE: All UUIDs mentioned are unique identifiers that must be obtained from their respective list operations. Never assume or hardcode UUIDs. Always provide empty object {} for tools that don't require parameters."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        5232,
        500
      ],
      "id": "f27a4112-6b7d-4148-8c66-31a5fb1c2434",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        3640,
        720
      ],
      "id": "1a320ec9-9a16-4d24-aebd-f283d3729088",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "mp7tI6wH90PEUkvq",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        3880,
        720
      ],
      "id": "b0225072-84c7-4ec5-b7df-b9fa544dac78",
      "name": "List Coolify Tools",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_version"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4000,
        720
      ],
      "name": "Get Version",
      "id": "a85f76b5-3d5f-42d0-a1ea-b648689c7d8d",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "health_check"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4120,
        720
      ],
      "name": "Health Check",
      "id": "7580941a-90ff-4a5f-a1e9-d3ead28d9076",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_teams"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4240,
        720
      ],
      "name": "List Teams",
      "id": "69a5e797-db3e-460a-8c26-effef2baa3c9",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_team",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Gets detailed information about a specific team. Required: team_id (UUID) obtained from list_teams response.`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4360,
        720
      ],
      "name": "Get Team",
      "id": "6a8dbd53-51d9-4978-82b4-8bd40e2d3dcc",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_current_team"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4480,
        720
      ],
      "name": "Get Current Team",
      "id": "b92f87c5-aff4-4943-99c6-03b06b202363",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_current_team_members"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4600,
        720
      ],
      "name": "Get Current Team Members",
      "id": "61f429e8-ce73-446c-8ca2-b9ae091c0b08",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_servers"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4720,
        720
      ],
      "name": "List Servers",
      "id": "73272cc3-201a-4ec3-b4f7-cbcce2024f16",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "create_server",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Creates a new server registration. Required: name (string), ip (string), port (number), user (string), private_key_uuid (UUID from list_private_keys). Optional: description, is_build_server (boolean), proxy_type (nginx/caddy).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4840,
        720
      ],
      "name": "Create Server",
      "id": "c017244f-116b-47fb-8a82-ff65092a77f7",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "validate_server",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Validates server configuration and connectivity. Required: uuid (server UUID from list_servers).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        4960,
        720
      ],
      "name": "Validate Server",
      "id": "b247a898-4e38-41f6-a688-196a932cd0f4",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_server_resources",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Gets server resource usage (CPU, memory, disk). Required: uuid (server UUID from list_servers).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5080,
        720
      ],
      "name": "Get Server Resources",
      "id": "6e2d034b-1834-49c4-b95b-9b1474c2d116",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_server_domains",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Lists domains configured for a server. Required: uuid (server UUID from list_servers).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5200,
        720
      ],
      "name": "Get Server Domains",
      "id": "006445e6-c07a-4077-ae86-b1bc1c69abca",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_services"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5320,
        720
      ],
      "name": "List Services",
      "id": "a8171bdf-d4ad-4bca-b4f7-15d7d1f9ed17",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "create_service",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Creates a new service. Required: name (string), server_uuid (UUID from list_servers), project_uuid (UUID). Optional: description, environment_name.`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5440,
        720
      ],
      "name": "Create Service",
      "id": "1530795e-cacb-43fd-9c62-f41b4d009227",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "start_service",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Starts a service. Required: uuid (service UUID from list_services).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5560,
        720
      ],
      "name": "Start Service",
      "id": "08302005-6c29-4ee7-a70e-d94dd0732ed1",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "stop_service",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Stops a service. Required: uuid (service UUID from list_services).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5680,
        720
      ],
      "name": "Stop Service",
      "id": "d60eb942-5af7-4a69-b6ae-850e45f18670",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "restart_service",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Restarts a service. Required: uuid (service UUID from list_services).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5800,
        720
      ],
      "name": "Restart Service",
      "id": "81263e6e-06f8-4e70-ba72-b31361d8a391",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_applications"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5920,
        720
      ],
      "name": "List Applications",
      "id": "2c9bb5b2-dfed-4cb6-8b20-4c7e3e3363f9",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "create_application",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Creates a new application. Required: project_uuid (UUID), environment_name (string), destination_uuid (server UUID from list_servers). Optional: git_repository (URL), ports_exposes (string).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6040,
        720
      ],
      "name": "Create Application",
      "id": "670be8f7-1ef5-4f72-aad5-6d76980e355c",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "start_application",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Starts an application. Required: uuid (application UUID from list_applications).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6160,
        720
      ],
      "name": "Start Application",
      "id": "4c7259d9-8247-4b55-ac4a-9b5bbe55235f",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "stop_application",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Stops an application. Required: uuid (application UUID from list_applications).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6280,
        720
      ],
      "name": "Stop Application",
      "id": "9cafeccb-74a1-44f1-a1f3-74a4cf874373",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "restart_application",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Restarts an application. Required: uuid (application UUID from list_applications).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6400,
        720
      ],
      "name": "Restart Application",
      "id": "91e67f5a-7889-4d74-be5e-41f70a008dc4",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "execute_command_application",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Executes a command in an application container. Required: uuid (application UUID from list_applications), command (string to execute).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6520,
        720
      ],
      "name": "Execute Command Application",
      "id": "7652e2f9-d8fe-4d89-ac4e-792523d88bdc",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_deployments"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6640,
        720
      ],
      "name": "List Deployments",
      "id": "d2cfed65-6bd3-4b7d-9c1e-06d4d8bf8f11",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "get_deployment",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Gets detailed deployment information. Required: uuid (deployment UUID from list_deployments).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6760,
        720
      ],
      "name": "Get Deployment",
      "id": "3d872b3a-15d8-452c-8fd7-58a26bf7b13c",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "list_private_keys"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        6880,
        720
      ],
      "name": "List Private Keys",
      "id": "67126963-f17c-45b8-b8ad-33f53b00eec4",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "create_private_key",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', `Creates a new SSH key entry. Required: name (string), private_key (PEM format string). Optional: description (string).`, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        7000,
        720
      ],
      "name": "Create Private Key",
      "id": "9ecdf503-7a83-41b9-b9a4-8cb657963b85",
      "credentials": {
        "mcpClientApi": {
          "id": "17iMX07eX1115WPl",
          "name": "Coolify MCP"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        3760,
        720
      ],
      "id": "eaba140b-d88c-4d06-9fed-12b659b8c24f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        4900,
        500
      ],
      "id": "7991cd0d-dc4a-476d-9ceb-284ddd9588f3",
      "name": "Ask the AI",
      "webhookId": "1b4b4d4c-eabe-45f9-a940-20660bfc8e5f"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "List Coolify Tools": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Version": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Health Check": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Teams": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Team": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Team": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Team Members": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Servers": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Server": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Validate Server": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Server Resources": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Server Domains": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Services": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Service": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Start Service": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Stop Service": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Restart Service": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Applications": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Application": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Start Application": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Stop Application": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Restart Application": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command Application": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Deployments": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Deployment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List Private Keys": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Private Key": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Ask the AI": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7fa0b2fb-5817-4ecc-aec5-5f89d8e791d5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6cc142ddc8a8a3e3c316ed10bef481b7751b7a5736aa1ad59ce09bd04d2bf633"
  },
  "id": "YmmMEysWo1TEHcTe",
  "tags": []
}